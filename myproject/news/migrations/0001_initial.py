# Generated by Django 2.0.2 on 2018-03-23 05:19

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppSettings',
            fields=[
                ('as_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('app_set', models.CharField(max_length=50)),
                ('app_val', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'AppSetting',
                'verbose_name_plural': 'AppSettings',
            },
        ),
        migrations.CreateModel(
            name='AppSource',
            fields=[
                ('source_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('source', models.URLField(max_length=100)),
                ('source_type', models.CharField(max_length=50)),
                ('domain_url', models.URLField(default='www.test.com', max_length=100)),
            ],
            options={
                'verbose_name': 'AppSource',
            },
        ),
        migrations.CreateModel(
            name='AppStatus',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('description', models.CharField(max_length=50)),
                ('status_type', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'AppStatus',
                'verbose_name_plural': 'AppStatus',
            },
        ),
        migrations.CreateModel(
            name='AssociationType',
            fields=[
                ('at_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('association', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AuditType',
            fields=[
                ('au_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('audit_type', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CustomMetaTags',
            fields=[
                ('mtg_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('metatag', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('e_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('entity_code', models.CharField(max_length=50)),
                ('entity_type', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GeoPolitical',
            fields=[
                ('e_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('gp_code', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Infograph',
            fields=[
                ('i_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('p_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('c_id', models.PositiveIntegerField()),
                ('status_id', models.PositiveIntegerField()),
                ('source_id', models.PositiveIntegerField()),
                ('internal_url', models.ImageField(upload_to='infograph.jpg')),
                ('external_url', models.URLField(default='www.test1.com', max_length=100)),
                ('appsource', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AppSource')),
                ('appstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AppStatus')),
            ],
            options={
                'verbose_name': 'Infograph',
                'verbose_name_plural': 'Infographs',
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='InfographAssociation',
            fields=[
                ('i_ad', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('i_id', models.PositiveIntegerField()),
                ('t_id', models.PositiveIntegerField()),
                ('mtg_id', models.PositiveIntegerField()),
                ('e_id', models.PositiveIntegerField()),
                ('gp_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('status_id', models.PositiveIntegerField()),
                ('appstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AppStatus')),
                ('custommetatags', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.CustomMetaTags')),
                ('entity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Entity')),
                ('geopolitical', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.GeoPolitical')),
                ('infograph', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Infograph')),
            ],
        ),
        migrations.CreateModel(
            name='InfographCategory',
            fields=[
                ('c_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('category', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'InfographCategory',
                'verbose_name_plural': 'InfographCategories',
            },
        ),
        migrations.CreateModel(
            name='MasterTopics',
            fields=[
                ('mt_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('master_topic_code', models.CharField(max_length=50)),
                ('master_topic', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'MasterTopic',
                'verbose_name_plural': 'MasterTopics',
            },
        ),
        migrations.CreateModel(
            name='ParentInfograph',
            fields=[
                ('p_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'ParentInfograph',
                'verbose_name_plural': 'ParentInfographs',
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('t_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('mt_id', models.PositiveIntegerField()),
                ('topic_code', models.CharField(max_length=50)),
                ('topicdescription', models.CharField(max_length=50)),
                ('mastertopics', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.MasterTopics')),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
            },
        ),
        migrations.CreateModel(
            name='UserAssociations',
            fields=[
                ('ua_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('u_id1', models.PositiveIntegerField()),
                ('u_id2', models.PositiveIntegerField()),
                ('at_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('status_id', models.PositiveIntegerField()),
                ('appstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AppStatus')),
                ('associationType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AssociationType')),
            ],
        ),
        migrations.CreateModel(
            name='UserAudit',
            fields=[
                ('uau_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('u_id', models.PositiveIntegerField()),
                ('au_id', models.PositiveIntegerField()),
                ('element_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('audittype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AuditType')),
            ],
        ),
        migrations.CreateModel(
            name='UserCustomMetaTags',
            fields=[
                ('umtg_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('u_id', models.PositiveIntegerField()),
                ('mtg_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('status_id', models.PositiveIntegerField()),
                ('appstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AppStatus')),
                ('custommetatags', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.CustomMetaTags')),
            ],
        ),
        migrations.CreateModel(
            name='UserEntity',
            fields=[
                ('ue_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('u_id', models.PositiveIntegerField()),
                ('e_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('status_id', models.PositiveIntegerField()),
                ('appstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AppStatus')),
                ('entity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Entity')),
            ],
        ),
        migrations.CreateModel(
            name='UserGeoPolitical',
            fields=[
                ('upg_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('u_id', models.PositiveIntegerField()),
                ('gp_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('status_id', models.PositiveIntegerField()),
                ('appstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AppStatus')),
                ('geopolitical', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.GeoPolitical')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('u_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('login', models.CharField(max_length=100)),
                ('pwd', models.CharField(max_length=100)),
                ('usertype_id', models.PositiveIntegerField()),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('gp_id', models.PositiveIntegerField()),
                ('status_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('appstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AppStatus')),
                ('geopolitical', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.GeoPolitical')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='UserTopic',
            fields=[
                ('ut_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('u_id', models.PositiveIntegerField()),
                ('t_id', models.PositiveIntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('status_id', models.PositiveIntegerField()),
                ('appstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.AppStatus')),
                ('topics', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Topics')),
                ('users', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Users')),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('usertype_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('usertype', models.CharField(max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='usergeopolitical',
            name='users',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Users'),
        ),
        migrations.AddField(
            model_name='userentity',
            name='users',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Users'),
        ),
        migrations.AddField(
            model_name='usercustommetatags',
            name='users',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Users'),
        ),
        migrations.AddField(
            model_name='useraudit',
            name='users',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Users'),
        ),
        migrations.AddField(
            model_name='userassociations',
            name='users',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Users'),
        ),
        migrations.AddField(
            model_name='infographassociation',
            name='topics',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.Topics'),
        ),
        migrations.AddField(
            model_name='infograph',
            name='infographcategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.InfographCategory'),
        ),
        migrations.AddField(
            model_name='infograph',
            name='parentinfograph',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.ParentInfograph'),
        ),
    ]
